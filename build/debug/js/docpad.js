// Generated by CoffeeScript 1.3.3
(function() {
  var docpadConfig,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  docpadConfig = {
    environments: {
      debug: {
        layoutsPaths: ['data/', '../js/', '../css/'],
        srcPath: 'html/',
        documentsPaths: ['pages'],
        outPath: '../build/debug/'
      },
      mbuilder: {
        layoutsPaths: ['data/', '../js/', '../css/'],
        srcPath: 'html/',
        documentsPaths: ['generated'],
        outPath: '../build/debug/'
      },
      deploy: {
        layoutsPaths: ['data/', '../js/', '../css/'],
        srcPath: 'html/',
        documentsPaths: ['pages'],
        outPath: '../build/deploy/'
      },
      docs: {
        layoutsPaths: [],
        srcPath: 'html/',
        documentsPaths: ['docs'],
        outPath: '../docs/'
      }
    },
    templateData: {
      site: {
        title: 'Sony Global'
      },
      data: function(path) {
        var output;
        return output = JSON.parse(require('fs').readFileSync(require('path').normalize(docpad.config.rootPath + '/html/data/' + path), 'utf8'));
      },
      polyfills: function() {
        var output;
        return output = docpad.getFilesAtPath(require('path').normalize(docpad.config.rootPath + '/js/libs/polyfill/')).pluck('filename');
      },
      require: function() {
        var output;
        return output = docpad.getFilesAtPath(require('path').normalize(docpad.config.rootPath + '/js/bundle/require/')).pluck('filename');
      },
      secondary: function() {
        var output;
        return output = docpad.getFilesAtPath(require('path').normalize(docpad.config.rootPath + '/js/bundle/secondary/')).pluck('filename');
      },
      defer: function() {
        var output;
        return output = docpad.getFilesAtPath(require('path').normalize(docpad.config.rootPath + '/js/bundle/defer/')).pluck('filename');
      },
      modulescss: function() {
        var output;
        return output = docpad.getFilesAtPath(require('path').normalize(docpad.config.rootPath + '/css/scss/modules/')).pluck('filename');
      },
      modulepages: function() {
        var output;
        return output = docpad.getFilesAtPath(require('path').normalize(docpad.config.rootPath + '/html/pages/')).pluck('filename');
      },
      title: function(name) {
        var output;
        return output = docpad.database.findOne({
          id: 'pages/' + name
        }).attributes.title;
      },
      desc: function(name) {
        var output;
        return output = docpad.database.findOne({
          id: 'pages/' + name
        }).attributes.description;
      }
    },
    plugins: {
      partials: {
        partialsPath: ''
      },
      handlebars: {
        helpers: {
          partial: function(content, options) {
            var output;
            return output = this.partial(content, options);
          },
          isEnv: function(context, options) {
            var output;
            return output = (__indexOf.call(this.getEnvironment(), context) >= 0) ? options.fn(this) : options.inverse(this);
          },
          json: function(context, options) {
            var output;
            return output = JSON.stringify(context);
          }
        }
      }
    }
  };

  module.exports = docpadConfig;

}).call(this);
