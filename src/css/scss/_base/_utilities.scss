//
// Utility classes
// --------------------------------------------------


// Quick floats
.pull-right {
  float: right;
}
.pull-left {
  float: left;
}

// Toggling content
.hide {
  display: none;
}
.show {
  display: block;
}

// Visibility
.invisible {
  visibility: hidden;
}

.hidden-text{
  display:block;
  line-height:0.1em;
  font-size:0.1em;
  text-indent:-9999px;
  overflow:hidden;
}

// For Affix plugin
.affix {
  position: fixed;
}

.fade {
  opacity: 0;
  -webkit-transition: opacity 0.15s linear;
     -moz-transition: opacity 0.15s linear;
       -o-transition: opacity 0.15s linear;
          transition: opacity 0.15s linear;
}

.fade.in {
  opacity: 1;
}

// Clearing floats
.clearfix {
  @include clearfix();
}

// Accessible yet invisible text
.hide-text {
  @include hide-text();
}

// Uses box-sizing mixin, so must be defined here
.input-block-level {
  @include input-block-level();
}

.text-center {
  text-align: center;
}


// Centering
// -------------------------
.ghost-center-wrap {
  @include ghost();
}

.ghost-center {
  display: inline-block;
  vertical-align: middle;
}

.table-center-wrap {
  display: table;
}

.table-center {
  display: table-cell;
  vertical-align: middle;
}


// Hero Images and content
// -------------------------
$maxHeroHeight: 400px;
$overlayColor: rgba($linkColor, .8);
.hero {
  position: relative;
  overflow: hidden;
  max-height: $maxHeroHeight;

  img {
    display: block;
    width: 100%;
  }

  // Only overlay color on IE9+ (double colon ignored in IE8)
  .hero-img-wrap::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: $overlayColor;
  }

  & > .container {
    position: relative;
  }
  
  .hero-text-wrap {
    position: absolute;
    z-index: 5;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .hero-text {
    width: 100%;
  }
}




// Star highlighting!
// -------------------------
[data-stars] .icon-ui-star:not(:first-child) {
  margin-left: 2px;
}

// We have to add half-stars to this. I gues that means it's actually a 10-star rating system.
[data-stars="1"] .icon-ui-star:nth-child(-n + 1),
[data-stars="2"] .icon-ui-star:nth-child(-n + 2),
[data-stars="3"] .icon-ui-star:nth-child(-n + 3),
[data-stars="4"] .icon-ui-star:nth-child(-n + 4),
[data-stars="5"] .icon-ui-star:nth-child(-n + 5) {
  background-position: -360px -60px;
}


// classes that just include the el-hidden/shown mixins, so if you want you can add/remove the class el-hidden or el-shown on your elements;
// or you can make your .active or .selected class act as a el-hidden or el-shown element by using the mixin on your class directly. Options!
.el-hidden{ @include el-hidden(); }
.el-shown{  @include el-shown(); } 
