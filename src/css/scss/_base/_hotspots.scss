//
// Hotspot Circles & circle-buttons
// --------------------------------------------------

$circleBtnDiameter: 42px;
$haloThickness: 20px;
$haloHoverThickness: 30px;

$circleBtnLargeDiameter:60px;
$circleBtnXLargeDiameter:76px;


// The hotspot is visually the gray halo around the circle-button. 
.hotspot {
  display: block;
  position:absolute;
  z-index:100;

  background-color:$hotspotHalo; 

  @include circleCentered($circleBtnDiameter + $haloThickness);

  /* everything but z-index is the same. z-index just needs a delay, no animation. */     
  @include transition-property( border-radius, margin,   width,  height, opacity, background-color,  z-index );
  @include transition-duration( $transitionNormal, $transitionNormal, $transitionNormal, $transitionNormal, $transitionNormal, $transitionNormal, 0s );
  @include transition-timing-function( ease-in, ease-in, ease-in, ease-in, ease-in, ease-in, linear );
  @include transition-delay( 0s, 0s, 0s, 0s, 0s, 0s, ($transitionNormal*2) );
  
  -webkit-backface-visibility: hidden;
  -webkit-transform: transform3d(0, 0, 0);
  
  &:hover {
    z-index:100;
    cursor:pointer;
    
    background-color:$hotspotHaloHover;

    @include circleCentered($circleBtnDiameter + $haloHoverThickness);

    @include transition-property( border-radius, margin,   width,  height, opacity, background-color,  z-index );
    @include transition-duration( $transitionNormal, $transitionNormal, $transitionNormal, $transitionNormal, $transitionNormal, $transitionNormal, 0s );
    @include transition-timing-function( ease-out, ease-out, ease-out, ease-out, ease-out, ease-out, linear );
    @include transition-delay( 0s, 0s, 0s, 0s, 0s, 0s, 0s );
  }

  &.hotspot-large{ @include circleCentered($circleBtnLargeDiameter + $haloThickness); }
  &.hotspot-xlarge{ @include circleCentered($circleBtnXLargeDiameter + $haloThickness); }
  &.hotspot-large:hover{ @include circleCentered($circleBtnLargeDiameter + $haloHoverThickness); }
  &.hotspot-xlarge:hover{ @include circleCentered($circleBtnXLargeDiameter + $haloHoverThickness); }


  .circle-button {
    z-index:1;
    display:block;
    position:absolute;
    top:50%;
    left:50%;

    @include circleCentered($circleBtnDiameter);
    
    @include gradient-vertical($highlightColor, $highlightColorDark);
       

  /* everything but background needs to be animated; so we have to explicitly define the rest. */ 
    @include transition-property( border-radius,  margin,  width,  height,  opacity );
    @include transition-duration( $transitionFast, $transitionFast, $transitionFast, $transitionFast, $transitionFast );
    @include transition-delay( $transitionSuperfast, $transitionSuperfast, $transitionSuperfast, $transitionSuperfast, $transitionSuperfast );
    @include transition-timing-function( ease-in, ease-in, ease-in, ease-in, ease-in );

    .circle-button-icon{
      @include background-sprite-icon-small();
      display:block;
      position:absolute;
      top:50%;
      left:50%;
      width:16px;
      height:16px;
      margin:-8px 0 0 -8px;
    }
  }
  &.hotspot-secondary .circle-button{
    // Used for 'close' button.
    @include gradient-vertical(lighten($gray,5%), $gray);
  }
  &.hotspot-large .circle-button{
    @include circleCentered($circleBtnLargeDiameter);
    .circle-button-icon{
      @include squareCentered(24px);
    }
  }
  &.hotspot-xlarge .circle-button{ 
    @include circleCentered($circleBtnXLargeDiameter);
    .circle-button-icon{
      @include squareCentered(40px);
    }
  }


  &:active .circle-button{
    @include box-shadow(inset 3px 3px 4px 0px rgba(0, 0, 0, 0.3));
  }
}



.hotspot-plus .circle-button .circle-button-icon            { @extend .icon-small-plus-white; }
.hotspot-close .circle-button .circle-button-icon           { @extend .icon-small-x-white; }
.hotspot-xlarge-revealer .circle-button .circle-button-icon { background-position:-287px -38px; }
