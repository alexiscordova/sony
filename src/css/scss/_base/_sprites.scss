//
// Sprites
// --------------------------------------------------

$icon_ui_Y :          0px;
$icon_ui2_Y :         -90px;
$icon_uibig_Y :       -180px;
$icon_tab_Y :         -360px;
$icon_angle_Y :       -450px;
$icon_bestfor_Y :     -630px;
  
$sprite_Specsicon_Y:  -690px;
$sprite_Mini_Y :      -750px;
$sprite_Reg_Y :       -780px;
$sprite_Big_Y :       -840px;
$sprite_Tall_Y :      -960px;


// -----
// All icons receive the styles of the %icon base class and are
// then given a unique class to add width, height, and 
// background-position. Your resulting HTML will look like
// <i class="icon-ui-inbox"></i>.


%icon {
  display: inline-block;
  @include ie7-restore-right-whitespace();
  line-height: 15px;
  vertical-align: text-top;
  background-image: url($iconSpritePath);
  background-repeat: no-repeat;  
}

[class^="sprite-"],
[class*=" sprite-"],
[class^="icon-"],
[class*=" icon-"] {
  @extend %icon;

  .no-svg & {
    background-image: url($iconSpritePathFallback);
  }
}


// Tab Icons
// GLEN :: Steve said generally icons will only have 2 states, and the active state will be the same as hover; but these tabs are 
// one of the few exceptions, so they need 3 states. I got rid of the hasHover and hasActive booleans since this is just for your
// tabs now, and I disabled hover in the mixin for now since there isn't a state in the spritesheet for it yet. 
// You can probably get rid of the "state2" and "state3" business now, since this mixin is now specific to your tabs. --[c]
@mixin icon-tab($name, $x, $w, $h) {
  .icon-tab-#{$name} {
    background-position: $x $icon_tab_Y;
    @include size($h, $w);

    //   &.state2,
    //   &:hover,
    //   &:focus,
    //   .tab:focus & { background-position: $x -390px; }

    .tab.active & { background-position: $x ($icon_tab_Y - 60); }
  }
}

@include icon-tab(laptop,       0,      33px, 24px);
@include icon-tab(tablet,       -60px,  20px, 26px);
@include icon-tab(memory-stick, -90px,  16px, 21px);
@include icon-tab(tv,           -120px, 35px, 26px);
@include icon-tab(projector,    -180px, 38px, 18px);
@include icon-tab(water-drop,   -240px, 15px, 20px);
@include icon-tab(mic,          -270px, 11px, 27px);
@include icon-tab(dongle,       -300px, 14px, 27px);
@include icon-tab(cd,           -330px, 27px, 26px);
@include icon-tab(handycam,     -360px, 36px, 22px);
@include icon-tab(video-camera, -420px, 38px, 28px);
@include icon-tab(grid,         -480px, 27px, 27px);
@include icon-tab(grid-alt,     -510px, 26px, 26px);
@include icon-tab(headphones,   -540px, 27px, 27px);
@include icon-tab(earbuds,      -570px, 45px, 24px);
@include icon-tab(earclips,     -630px, 17px, 28px);
@include icon-tab(neckphones,   -660px, 45px, 19px);





// UI Icons
@mixin icon-ui($name, $x, $w, $h, $hasHover:false, $hasActive:false, $activeIsHover:false, $margin:false) {
  .icon-ui-#{$name} {
    background-position: $x $icon_ui_Y;
    @include size($h, $w);

    @if ( $margin ) {
      margin: $margin;
    }

    @if ( $hasHover ) {
      &:hover,
      &:focus { background-position: $x ($icon_ui_Y - 30); }
    }

    @if ( $activeIsHover ) {
      &.active,
      .active &, { background-position: $x ($icon_ui_Y -30); }

    } @else if ( $hasActive ) {
      &.active,
      .active &, { background-position: $x ($icon_ui_Y -60); }
    }
  
  }
}
@include icon-ui(favorite,                          0px,      15px,   13px,   true,   false, false);
@include icon-ui(cart,                              -30px,    17px,   14px,   true,   false, false);
@include icon-ui(search,                            -60px,    30px,   13px);
@include icon-ui(arrowhead-down-gray,               -90px,    8px,    4px);
@include icon-ui(arrowhead-up-gray,                 -120px,   8px,    4px);
@include icon-ui(arrowhead-down-white,              -150px,   8px,    4px);
@include icon-ui(arrowhead-up-white,                -180px,   8px,    4px);
@include icon-ui(arrowhead-down-blue,               -210px,   8px,    4px);
@include icon-ui(arrowhead-up-blue,                 -240px,   8px,    4px);
@include icon-ui(arrow-right-white,                 -270px,   11px,   8px);
@include icon-ui(arrow-right-blue,                  -300px,   11px,   8px);
@include icon-ui(grid,                              -330px,   16px,   16px);
@include icon-ui(star,                              -360px,   13px,   13px,   false,  true, false);
@include icon-ui(starhalf,                          -390px,   13px,   13px,   false,  true, false);
@include icon-ui(arrowheads-up-down-gray,           -420px,   8px,    11px);
@include icon-ui(plus-tiny,                         -450px,   9px,    9px);
@include icon-ui(plus-skinny,                       -480px,   16px,   16px);
@include icon-ui(x-skinny,                          -510px,   16px,   16px);
@include icon-ui(revealer-l-r-xl,                   -540px,   32px,   32px);
@include icon-ui(check,                             -600px,   11px,   8px);
@include icon-ui(x-tiny,                            -630px,   10px,   10px);
@include icon-ui(close,                             -660px,   16px,   16px);

@include icon-ui(navmenu-account,                   -690px,   16px,   15px,   true,   false,  false,  0 0 0 0);
@include icon-ui(navmenu-orders,                    -720px,   16px,   11px,   true,   false,  false,  0 0 0 0);
@include icon-ui(navmenu-newsletter,                -750px,   12px,   15px,   true,   false,  false,  0 0 0 0);
@include icon-ui(navmenu-reg-prod,                  -780px,   12px,   17px,   true,   false,  false,  0 0 0 0);


// I'm gonna come back to this - there's probably a more elegant way of doing this; or maybe I'll just make 
// it a <i> like all the others so I don't need this mixin.
@mixin icon-ui-pseudo-el($x, $w, $h, $hasHover:false, $hasActive:false, $activeIsHover:false, $margin:false) {
  @extend %icon;
  background-position: $x 0px;
  @include size($h, $w);

  @if ( $margin ) {
    margin: $margin;
  }
}
.icon-ui-pseudo-el-arrow-right-blue { @include icon-ui-pseudo-el(-300px, 11px, 8px); }



// Best for
// ----------------------
@mixin icon-bestfor($name, $x, $w, $h) {
  .icon-bestfor-#{$name} {
    background-position: $x $icon_bestfor_Y;
    @include size($h, $w);

    // Could there be more scenarios? possibly
    .btn:not([disabled]):hover &,
    .btn:not([disabled]):focus &,
    .btn.active & { background-position: $x ($icon_bestfor_Y - 30px); }
  }
}

@include icon-bestfor(running,    0,      30px,   28px);
@include icon-bestfor(mic,        -30px,  12px,   30px);
@include icon-bestfor(snowboard,  -60px,  30px,   30px);






// --------------------------------------------
// SPRITES 
// --------------------------------------------

@mixin sprite($basename, $name, $x, $w, $h, $margin:false) {
  $y: 0;
          @if ( $basename == specsicon ) { $y: $sprite_Specsicon_Y;
   } @else if ( $basename == mini ) { $y: $sprite_Mini_Y;
   } @else if ( $basename == reg ) { $y: $sprite_Reg_Y;
   } @else if ( $basename == big ) { $y: $sprite_big_Y;
   } @else if ( $basename == tall ) { $y: $sprite_tall_Y; 
   }
  .sprite-#{$basename}-#{$name} {
    background-position: $x $y;
    @include size($h, $w);
    
    @if ( $margin ) {
      margin: $margin;
    }
  }
}
@include sprite(mini, global-nav-indicator, 0px,  22px,  9px);
@include sprite(reg, nav-sony-logo,         0px,  89px,  31px);


 
// background-position: -300px 0px;
// @include size(8px, 11px);
