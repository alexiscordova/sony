mixin partial(m, d)
  m = 'modules/' + m
  e = {"locals":locals, "data":locals.data(d)}
  !{locals.partial(m, e)}
//- single line mixin for partials
//- +partial('example.html.jade', 'example/default.json')


//- img - an object with at least: `src`, `alt`, `noscriptsrc`
//- [extraClasses] - a string containing any extra classes to put on the img element
//- [itemprop] - optional itemprop attibute (should be 'image' if used).
mixin iQImage( img, extraClasses, itemprop )
  - classes = 'iq-img'
  - extraClasses = extraClasses || false
  - itemprop = itemprop || false
  - if ( extraClasses ) classes += ' ' + extraClasses
  img(class=classes, data-src=img.src, alt=img.alt, itemprop=itemprop)
  noscript
    img(class=extraClasses, src=img.noscriptsrc, alt=img.alt, itemprop=itemprop)

//- hgobject is an object with potential h# items and their text values
//- for instance {"h2": "this is a h2", "h3": "this is a h3" }
//- h#class is optional classes to add to the h if it finds one
//- it will only add h#'s that exist or add classes that are defined
//- if you pass it nothing it assumes data as the hgobject so if h#'s are defined in the top level of your json it picks them up
//- ie: +hgroup()   or     +hgroup(someobject, "", "t3", "l1", "l2", "myclass")
mixin hgroup (hgobject, h1class, h2class, h3class, h4class, h5class, h6class)
  - hgobject = hgobject || data
  - h1class = h1class || ""
  - h2class = h2class || ""
  - h3class = h3class || ""
  - h4class = h4class || ""
  - h5class = h5class || ""
  - h6class = h6class || ""
  hgroup
    if hgobject.h1
      h1(class= h1class) !{hgobject.h1}
    if hgobject.h2
      h2(class= h2class) !{hgobject.h2}
    if hgobject.h3
      h3(class= h3class) !{hgobject.h3}
    if hgobject.h4
      h4(class= h4class) !{hgobject.h4}
    if hgobject.h5
      h5(class= h5class) !{hgobject.h5}
    if hgobject.h6
      h6(class= h6class) !{hgobject.h6}



//- are these used in more than one file??


//- the list is an array of list items like this:
//- "definitionList" : [
//-   {
//-       "term" : "Dimension",
//-       "definitions" : [
//-           "12.95 x 7.30 x 2.32cm",
//-           "(4.375&Prime; x 3.875&Prime; x 2.125&Prime;)"
//-       ]
//-   },
//-   {
//-       "term" : "Height",
//-       "definition" : "8.5oz (240g)"
//-   }
//- ]
//- and outputs a definition list like this:
//- <dl>
//-   <dt>term</dt>
//-   <dd>definition</dd>
//- </dl>
mixin definitionList( list, isHorizontal )
  - isHorizontal = isHorizontal || false
  - clss = isHorizontal ? 'dl-horizontal' : null
  dl(class=clss)
    each li in list
      dt.l6: strong= li.term
      if li.definition
        dd.p3= li.definition
      else
        each definition in li.definitions
          dd.p3= definition

//- A simple unstyled ul
mixin specList( list, extraClasses )
  - classes = 'unstyled spec-list'
  - extraClasses = extraClasses || false
  - if ( extraClasses ) classes += ' ' + extraClasses
  ul(class=classes)
    each li in list
      li.p3= li