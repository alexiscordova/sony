//- single line mixin for partials
//- +partial('example.html.jade', 'example/default.json')

mixin partial(m, d, isSubmodule)
  data = locals.data(d)
  if isSubmodule
    - data.isSubmodule = true
  e = {"locals":locals, "data":data}
  !{locals.partial('packages/modules/' + m, e)}

mixin includeCSS(moduleName)
  e = {"locals": locals}
  if (!e.locals.modulescss)
    - e.locals.modulescss = []
  if(e.locals.modulescss)
    if (e.locals.modulescss.indexOf(moduleName) == -1)
      - e.locals.modulescss.push(moduleName)

mixin includeJavascriptModule(moduleName)
  e = {"locals":locals}
  if ( !e.locals.javascriptModules )
    - e.locals.javascriptModules = []
  if ( e.locals.javascriptModules )
    if ( e.locals.javascriptModules.indexOf(moduleName) == -1 )
      - e.locals.javascriptModules.push(moduleName)

//- @param {array} classes an array of strings which will become classes on the main element
mixin mainElement( classes )
  moduleId = data.id ? data.id : false
  isSubmodule = data.isSubmodule
  classes = classes && classes.length ? classes : false

  if isSubmodule
    //- If this is a submodule, the id should already be on the main module
    div(class=classes)
      block
  else
    section(id=moduleId, class=classes)
      block


//- img - an object with at least: `src`, `alt`, `noscriptsrc`
//- [extraClasses] - a string containing any extra classes to put on the img element
//- [itemprop] - optional itemprop attibute (should be 'image' if used).
mixin iQImage( img, extraClasses, itemprop )

  //- Stop the build process from breaking on undefined images
  //- Hopefully you'll be able to find your broken image on the page!
  if !img
    div(style="overflow:hidden;")
      p.l3(style="color:red;margin:0") Missing image data!
      p.l3(style="color:red;margin:0")= 'img = ' + JSON.stringify( img )
  else
    - classes = 'iq-img'
    - extraClasses = extraClasses ? extraClasses : false
    - itemprop = itemprop ? itemprop : false
    - if ( extraClasses ) classes += ' ' + extraClasses
    img(class=classes, data-src-desktop=img.srcDesktop, data-src-tablet=img.srcTablet, data-src-phone=img.srcPhone, data-src-desktop-highres=img.srcDesktopHighRes, data-src-tablet-highres=img.srcTabletHighRes, data-src-phone-highres=img.srcPhoneHighRes, alt=img.alt, itemprop=itemprop)
    noscript
      img(class=extraClasses, src=img.noscriptsrc, alt=img.alt, itemprop=itemprop)

//- Mixin for videos
mixin sonyVideo ( videoData )
  if !videoData
    p.l3(style='color:red;') Missing Video data!
  else
    //- add more domain keys here if necessary don't forget to concatenate
    - sonyKey = '$343124831096460,'
    - odopodKey = '$421601038208546'
    - allDomainKeys = sonyKey + odopodKey
    - isIQPoster  = videoData.poster ? true : false
    if (isIQPoster == true)
      div(class='player is-splash no-time play-button iq-img'  , data-fallback-src=videoData.mp4.srcDesktop, data-key=allDomainKeys , data-ratio=videoData.ratio , data-src-desktop=videoData.poster.srcDesktop, data-src-tablet=videoData.poster.srcTablet, data-src-phone=videoData.poster.srcPhone, data-src-desktop-highres=videoData.poster.srcDesktopHighRes, data-src-tablet-highres=videoData.poster.srcTabletHighRes, data-src-phone-highres=videoData.poster.srcPhoneHighRes)
       video(preload='none')
        //- source(type='video/webm', src=videoData.webm.srcDesktop)
        source(type='video/mp4',  src=videoData.mp4.srcDesktop)
        //- source(type='video/ogg',  src=videoData.ogg.srcDesktop)
        source(type='video/flash',src=videoData.mp4.srcDesktop)
    else
      div(class='player is-splash no-time play-button'  , data-key=allDomainKeys , data-ratio=videoData.ratio)
       video(preload='none')
        //- source(type='video/webm', src=videoData.webm.srcDesktop)
        source(type='video/mp4',  src=videoData.mp4.srcDesktop)
        //- source(type='video/ogg',  src=videoData.ogg.srcDesktop)
        source(type='video/flash',src=videoData.mp4.srcDesktop)


//-is anyone using this? we can probably dump it, seems everyone needed much more specific control over their headers.. -ps
//- +1 to dump it - gc

//- hgobject is an object with potential h# items and their text values
//- for instance {"h2": "this is a h2", "h3": "this is a h3" }
//- h#class is optional classes to add to the h if it finds one
//- it will only add h#'s that exist or add classes that are defined
//- if you pass it nothing it assumes data as the hgobject so if h#'s are defined in the top level of your json it picks them up
//- ie: +hgroup()   or     +hgroup(someobject, "", "t3", "l1", "l2", "myclass")
mixin hgroup (hgobject, h1class, h2class, h3class, h4class, h5class, h6class)
  - hgobject = hgobject || data
  - h1class = h1class || ""
  - h2class = h2class || ""
  - h3class = h3class || ""
  - h4class = h4class || ""
  - h5class = h5class || ""
  - h6class = h6class || ""
  .hgroup
    if hgobject.h1
      h1(class= h1class) !{hgobject.h1}
    if hgobject.h2
      h2(class= h2class) !{hgobject.h2}
    if hgobject.h3
      h3(class= h3class) !{hgobject.h3}
    if hgobject.h4
      h4(class= h4class) !{hgobject.h4}
    if hgobject.h5
      h5(class= h5class) !{hgobject.h5}
    if hgobject.h6
      h6(class= h6class) !{hgobject.h6}


//- To be used with bootstrap's dropdown
mixin shareMenu( socialButtons, shortLink, addCloseButton )
  //- Default to false
  addCloseButton = addCloseButton == true

  ul.dropdown-menu.dropdown-menu-alt.share-menu.pull-right(role="menu")
    if addCloseButton
      button.box-close.box-close-small(data-dismiss="modal", aria-hidden="true")
        i.fonticon-10-x
    each social in socialButtons
      li
        a(href=social.link)
          span.social-icon(class=social.id + '-background-color')
            i(class=social.icon)
          span.social-label.p3= social.label
    li.input-holder
      span.link-icon.js-no-close
        i.fonticon-15-link.js-no-close
      input.p4(type="text", value=shortLink)


blocks = {};
mixin defineBlock(name)
  block
  len = buf.length;
  - buf.push('');
  - blocks[name] = len;
mixin appendBlock(name)
  start = buf.length;
  block
  - buf[blocks[name]] += buf.splice(start, buf.length - start).join('');


mixin docsLinks( listName, suffix, exclude )
  //- Not sure why `locals` can only be used inside a mixin
  list = locals[ listName ]()
  href = '../build/debug/'
  lastPageTitle = null

  if exclude
    - list.splice( list.indexOf( exclude ), 1 )

  //- Sort alphabetically, regardless of case
  - list.sort( function(a, b) { codea = a.match(/\b[a-z]{1}[0-9]{1,2}\b/); a = codea ? codea[0] :a; codeb = b.match(/\b[a-z]{1}[0-9]{1,2}\b/); b = codeb ? codeb[0] :b; if (a.toLowerCase() < b.toLowerCase()) return -1; if (a.toLowerCase() > b.toLowerCase()) return 1; return 0; })

  each name in list
    title = name.replace(/.html/g, '').replace(/-/g, ' ').replace(' ' + suffix, '')
     //- this moves the a## to the front of the word
    codes = title.match(/\b[a-z]{1}[0-9]{1,2}\b/g);
    if codes != null
      title = title.replace(/\s[a-z]{1}[0-9]{1,2}\b/g, '');
      title = codes.join(' ') + ' ' + title;


    prefix = title.match(/^[a-z]{1}[0-9]/) ? title.substring( 0, 1 ) : title.match(/^\w+/)[0]
    if lastprefix != null && lastprefix != prefix
      hr
    a( href = href + name, title=title) !{ title }
    lastprefix = prefix


