include ../../../common/html/jade-helpers.jade

layouts = locals.getConfigFile("packages/modules/gallery-g2-g3/html/layouts.json")

mixin loaderDiv()
  .relative.gallery-loader
    .loading.text-center
      img(class="global-loader", src="img/loader.gif", alt="Loading...")

mixin filterColor( filterSet )
  ul.unstyled.color-swatches(data-filter=filterSet.name, data-filter-type=filterSet.type)
    each filter in filterSet.filters
      //- Can't have variable attribute names :( - build an html string
      tagString = '<li class="fonticon-10-sm-bold-check--after swatch-' + filter.value + '" data-label="' + filter.label + '" data-' + filterSet.name + '="' + filter.value + '"></li>'
      | !{tagString}

mixin filterRange( filterSet )
  .range-output-container
    .relative
      .range-output-min
        sup $
        span.val
      .range-output-max
        sup $
        span.val
  .range-control-wrap
    .range-control(data-label=filterSet.label, data-filter=filterSet.name, data-filter-type=filterSet.type, data-min=filterSet.min, data-max=filterSet.max)

mixin filterButton( filterSet )
  .btn-group(data-filter=filterSet.name, data-filter-type=filterSet.type)
    each filter in filterSet.filters
      tagString = '<button class="btn btn-square no-hover-transition fonticon-10-sm-bold-check--after" data-label="' + filter.label + '" data-' + filterSet.name + '="' + filter.value + '">' + filter.label + '</button>'
      | !{tagString}
  if filterSet.help
    +helpPopover( filterSet.help )

mixin filterCheckbox( filterSet )
  ul.unstyled(data-filter=filterSet.name, data-filter-type=filterSet.type)
    each filter in filterSet.filters
      li.control-inline
        if filter.help
          +helpPopover( filter.help, true )
        input.styled-checkbox(id=filterSet.name + '-' + filter.value, data-label=filter.label, type="checkbox", value=filter.value)
        label.p3(class="fonticon-10-sm-bold-check--after", for=filterSet.name + '-' + filter.value)= filter.label

mixin filterGroup( filterSet )
  ul.media-list(data-filter=filterSet.name, data-filter-type=filterSet.type, data-length=filterSet.filters.length)
    each filter in filterSet.filters
      li = '<li class="media clearfix" data-label=' + filter.label + ' data-' + filterSet.name + '="' + filter.value + '">'
      btn = '<div class="pull-left"><button class="btn btn-square no-hover-transition fonticon-10-sm-bold-check--after media-object"><i class="fonticon-20-' + filter.icon + '"></i></button></div>'
      body = '<div class="media-body"><p class="media-heading p3">' + filter.label + '</p><p class="p4">' + filter.description + '</p></div>'
      mediaObject = li + btn + body + '</li>'
      | !{ mediaObject }

mixin helpPopover( help, pullRight, circleOnLeft )
  pullRight = pullRight ? pullRight : false
  classes = 'help-container js-popover-trigger'
  - if ( pullRight ) classes += ' pull-right'
  div(class=classes, data-original-title=help.title)
    if circleOnLeft
      i.fonticon-10-circle-q
    if help.label
      span.p4.help-label= help.label
    if !circleOnLeft
      i.fonticon-10-circle-q
    +popoverContent( help )

mixin popoverContent( help )
  - layout = help.layout
  .js-popover-content.hidden
    button.box-close.box-close-small
      i.fonticon-10-x
    if layout == '2up'
      .twoup
        .popover-col
          +iQImage( help.col1.img )
          p.p4= help.col1.text
        .popover-col
          +iQImage( help.col2.img )
          p.p4= help.col2.text

    else if layout == 'text-only'
      p.p4= help.text
      if help.link
        newWindow = help.link.newWindow ? "_blank" : false
        a.lt4(href=help.link.url, target=newWindow)= help.link.text

mixin filterSet( filterSet )
  .filter-container
    p.l3.filter-label= filterSet.label
    if filterSet.type == 'color'
      +filterColor( filterSet )

    else if filterSet.type == 'range'
      +filterRange( filterSet )

    else if filterSet.type == 'button'
      +filterButton( filterSet )

    else if filterSet.type == 'checkbox'
      +filterCheckbox( filterSet )

    else if filterSet.type == 'group'
      +filterGroup( filterSet )


mixin compareBrowseBtn( isCompareGallery, link, addFade )
  browseStr = 'Grid'
  compareStr = 'Compare'
  browseClasses = [ 'btn', 'btn-small', 'compare-btn' ]
  compareClasses = [ 'btn', 'btn-small', 'compare-btn' ]
  tabIndex = addFade ? '-1' : false

  if isCompareGallery
    browseLink = link
    compareLink = false
    - compareClasses.push( 'active' )
  else
    compareLink = link
    browseLink = false
    - browseClasses.push( 'active' )

  if addFade
    - browseClasses.push( 'fade' )
    - compareClasses.push( 'fade' )

  a(class=browseClasses, href=browseLink, tabindex=tabIndex)
    i.fonticon-10-browse
    | !{ browseStr }
  a(class=compareClasses, href=compareLink, tabindex=tabIndex)
    i.fonticon-10-compare
    | !{ compareStr }

mixin filterBtn( galleryName )
  filterStr = 'Filter'
  filterBtnClasses = [ 'btn', 'btn-alt-special', 'slide-toggle', 'collapsed', 'first', 'pull-left' ]

  button(class=filterBtnClasses, data-toggle="collapse", data-target='#' + galleryName + '-filters')
    | !{ filterStr }
    i.fonticon-10-arrowhead-down

mixin galleryShareMenu( shareMenu )
  .share-options
    a.js-share.share-trigger(data-toggle="dropdown", href="#")
      span.bt3= shareMenu.shareText
      span.plus-holder
        i.fonticon-10-sm-bold-plus
    +shareMenu( shareMenu.socialButtons, shareMenu.shortLink )

mixin productCount( plural, singular, total )
  div.pull-left.p3.product-count-wrap
    strong.text-dark.product-count.js-product-count= total
    span.js-product-str.product-str(data-plural=plural, data-singular=singular)= plural

mixin galleryFilters( gallery, isCompareGallery, isFavoritesGallery )
  sortByStr = gallery.sortText ? gallery.sortText : 'Sort By:'
  pluralProducts = gallery.pluralProducts ? gallery.pluralProducts : 'Products'
  singularProduct = gallery.singularProduct ? gallery.singularProduct : 'Product'
  compareBrowseLink = isCompareGallery ? gallery.browseLink : gallery.compareLink
  compareBrowseLink = compareBrowseLink ? compareBrowseLink : '#'
  wrapperClass = 'container filter-display-bar slide-toggle-parent'
  gridClass = 'grid no-grid-at-767'

  //- The filter display bar needs to know when there is only 1 button
  //- so that it doesn't have to be 48% width and clipped
  numBtns = gallery.filterSet ? 2 : 1;
  numBtns = ' btns-' + numBtns
  wrapperClass = wrapperClass + numBtns

  div(class=wrapperClass)
    if gallery.sortSet
      div(class=gridClass)

        //- Product Count
        +productCount( pluralProducts, singularProduct, gallery.total )

        //- Regular gallery - Filter and compare buttons
        if gallery.filterSet
          +filterBtn( gallery.name )
          .pull-right.content-right
            //- Sort options
            +compareBrowseBtn( isCompareGallery, compareBrowseLink, false )
            +sorter( gallery.sortSet, sortByStr )

        else if isFavoritesGallery
          //- Favorites gallery
          .pull-right.content-right
            +compareBrowseBtn( isCompareGallery, compareBrowseLink, true )
            +sorter( gallery.sortSet, sortByStr )

        else if isCompareGallery
          //- Standalone compare gallery
          .pull-right.content-right
            +compareBrowseBtn( isCompareGallery, compareBrowseLink, false )
            +sorter( gallery.sortSet, sortByStr )

        else if gallery.mode == 'detailed' && gallery.accessoryFinder
          +accessoryFinderButton( undefined, 'first pull-left' )
          .pull-right.content-right
            +sorter( gallery.sortSet, sortByStr )


  if gallery.filterSet
    +filterTray( gallery.filterSet, gallery.name )


mixin filterTray( filterSets, galleryName )
  .container.slide-arrow-under.fade
    .relative
      .slide-toggle-arrow
  .container.slide-arrow-over.fade
    .relative
      .slide-toggle-arrow


  .collapse.slide-toggle-target(id=galleryName + '-filters')
    .filter-options.container
      .grid.no-grid-at-767
          .span4
            each filterSet in filterSets
              if filterSet.filterGroup == 1
                +filterSet( filterSet )
          .span4
            each filterSet in filterSets
              if filterSet.filterGroup == 2
                +filterSet( filterSet )
          .span4
            each filterSet in filterSets
              if filterSet.filterGroup == 3
                +filterSet( filterSet )

  .container.active-filters-wrap
    .grid.active-filters(data-clear-label="Clear All")


mixin sorter( sortSet, text )
  .sort-options.ib
    label.l3.filter-label(for="select-sort-by")= text
    span.dropdown.dropdown-alt.ib
      button.lt4.btn.btn-small.dropdown-toggle.dropdown-toggle-alt(data-toggle="dropdown")
        span.js-toggle-text= sortSet[0].label
        i.fonticon-10-arrowheads-elevator
      ul.dropdown-menu.dropdown-menu-alt.pull-right(role="menu")
        each sort in sortSet
          //- Jade will interpret attr=true as attr=attr. We need to make it a string
          //- If sort is false, or not present, we don't need to add the attribute
          - reverse = sort.reverse ? 'true' : false
          li
            a(data-value=sort.name, data-reverse=reverse, href="#")= sort.label
    .native-dropdown
      i.fonticon-10-arrowheads-elevator.absolutely
      select#select-sort-by.select-small
        each sort in sortSet
          - reverse = sort.reverse ? 'true' : false
          option(value=sort.name, data-reverse=reverse)= sort.label


mixin zeroProductsMessage( gallery )
  if gallery.filterSet
    .container.js-zero-message.hidden
      .grid
        .t4
          strong.text-dark 0
          span.text-med-dark= ' ' + gallery.zeroProductsMessage
        button.btn.btn-small.js-clear-filters= gallery.startOver

mixin zeroFavoritesMessage( gallery, isHidden )
  title = gallery.nofavs && gallery.nofavs.title ? gallery.nofavs.title : 'gallery.nofavs.title'
  message = gallery.nofavs && gallery.nofavs.message ? gallery.nofavs.message : 'gallery.nofavs.message'
  classes = [ 'container', 'no-favs' ]

  if isHidden
    - classes.push( 'hidden', 'js-zero-message' )

  section(class=classes)
    .grid.text-center
      h1.t4
        strong= title
      p.ilikeyou
        i.fonticon-10-favorite
      p.p3= message


mixin featuredGallery( submodules, gallery, type )
  submodules = submodules ? submodules : data.submodules
  gallery = gallery ? gallery : data.featured
  type = type ? type : 'product'
  i = 0

  section.gallery.fade.container((id=gallery.name + '-gallery', data-mode=gallery.mode)
    .grid
      h2.t6.featured-gallery-title= gallery.title
    .products.slimgrid5.shuffle-5.m-grid-at-567
      each module in submodules
        d = locals.data(module.data)
        if d.featured && d.type == type
          - d.layout = layouts[gallery.layout][i++]
          - d.view = "basic"
          - d.iterator = i
          e = { "locals" : locals, "data" : d }
          !{locals.partial( module.type, e )}

    if gallery.link
      .grid.see-all
        +link( gallery.link, [ "btn", "btn-small" ] )


mixin detailedGallery( submodules, gallery, type )
  submodules = submodules ? submodules : data.submodules
  gallery = gallery ? gallery : data.productCards
  type = type ? type : 'product'

  section.gallery.fade(id=gallery.name + '-gallery', data-mode=gallery.mode)
    +galleryFilters( gallery )

    .container
      .products.slimgrid.no-grid-at-767
        each module in submodules
          d = locals.data(module.data)
          if d.type == type && !d.promo
            - d.view = "detailed"
            e = { "locals" : locals, "data" : d }
            !{locals.partial( module.type, e )}

    +zeroProductsMessage( gallery )

    if gallery.nextLink
      .navigation.invisible
        a(href=gallery.nextLink) Camera Overflow
      .infscr-holder.text-center


mixin favoritesTitle( gallery )
  .container.gallery-title
    .grid.no-grid-at-767
      .span
        h1.t2.title= gallery.title
      .span.pull-right
        if gallery.shareMenu && gallery.favorites && gallery.favorites.length > 0
          +galleryShareMenu( gallery.shareMenu )

mixin favoritesGallery( gallery )
  +favoritesTitle( gallery )

  if gallery.favorites && gallery.favorites.length > 0
    section.gallery.fade.gallery-favorites(id=gallery.name + '-gallery', data-mode=gallery.mode)
      +galleryFilters( gallery, null, true )

      .container
        .products.slimgrid.no-grid-at-767
          each favorite in gallery.favorites
            d = locals.data(favorite.data)
            if d.isFavorited && !d.promo
              - d.view = "detailed"
              - d.includeType = true
              e = { "locals" : locals, "data" : d }
              !{locals.partial( favorite.type, e )}
          +recommendedTile( gallery.recommended )

      +zeroFavoritesMessage( gallery, true )

      if gallery.nextLink
        .navigation.invisible
          a(href=gallery.nextLink) Next set
        .infscr-holder.text-center
  else
    +zeroFavoritesMessage( gallery )


mixin compareGallery( submodules, gallery, type, labels )
  submodules = submodules ? submodules : data.submodules
  gallery = gallery ? gallery : data.productCards
  type = type ? type : 'product'
  labels = labels ? labels : gallery.labels

  label = gallery.galleryName ? gallery.galleryName : 'this is gallery.galleryName'
  legend = gallery.legend ? gallery.legend : 'this is defined in gallery.legend'
  resetLabel = gallery.resetLabel ? gallery.resetLabel : 'gallery reset label'

  section.gallery.fade(id=gallery.name + '-gallery', data-mode=gallery.mode)

    +galleryFilters( gallery, true )

    .tone-bar
      .container
        .grid
          h2.t6.compare-gallery-title= label
          a.compare-reset.lt4.js-compare-reset.js-clear-filters.disabled(href="#")
            i.fonticon-10-circlearrow
            span= resetLabel
          span.legend
            i.swatch-lemon.mini-swatch
            span.p5
              em!= '&nbsp;' + legend


    .sticky-nav.tone-bar
      .container
        .grid
          .pull-left
            h2.t7.sticky-nav-title= label
          a.pull-right.compare-reset.lt4.js-compare-reset.js-clear-filters.disabled(href="#")
            i.fonticon-10-circlearrow
            span= resetLabel


    .relative
      .container.compare-wrap
        nav.compare-nav-container.pagination-paddles.show-paddles
          a.pagination-paddle.outset.pagination-prev.on.compare-nav.compare-nav-prev
            i.fonticon-10-chevron-reverse
          a.pagination-paddle.outset.pagination-next.on.compare-nav.compare-nav-next
            i.fonticon-10-chevron
        .products
          .span2.detail-labels-wrap
            .compare-sticky-header.sticky-count
              .sticky-bar.right-bar
            .detail-labels-wrapping
              .detail-label-group
                each label in labels
                  .detail-label.detail
                    p.l3
                      strong= label.label

          .compare-items-wrap
            .compare-items-container
              each module in submodules
                d = locals.data(module.data)
                if d.type == type && !d.promo
                  - d.view = "compare"
                  e = { "locals" : locals, "data" : d, "labels" : gallery.labels }
                  !{locals.partial( module.type, e )}

    +zeroProductsMessage( gallery )



mixin galleryStickyTabs( tabs, moduleName, moduleId )
  .sticky-tabs.tab-strip.gallery-tabs(data-tablet-mode="carousel", data-module-name=moduleName, data-module-id=moduleId)
    .tabs-container.container.m-full-bleed
      .grid.m-full-bleed
        .relative
          .tabs
            each tab, i in tabs
              activeClass = i == 0 ? ' active' : ''
              tabClass = 'tab' + activeClass
              button(class=tabClass, data-target=tab.slug, data-toggle="tab", data-hash="true")
                .tab-inside
                  .holder-for-icon
                    iconClass = 'fonticon-40-' + tab.icon
                    i(class=iconClass)
                  h3.l2.tab-label= tab.label
        nav.tab-nav-btns
          a.nav-paddle.tab-nav.tab-nav-prev.hidden(href="#")
            i.fonticon-10-chevron-reverse
          a.nav-paddle.tab-nav.tab-nav-next.hidden(href="#")
            i.fonticon-10-chevron

mixin accessoryFinderButton( text, extraClasses )
  text = text ? text : 'Accessory Finder'
  classes = [ 'btn', 'btn-alt-special', 'btn-alt-plus', 'accessory-finder-btn' ]
  - if ( extraClasses ) classes.push( extraClasses )
  button(class=classes, data-toggle="modal", data-target="#accessory-finder-modal")
    i.fonticon-10-sm-bold-plus
    | !{ text }

mixin accessoryFinder( submodules, finder, type, noButton )
  submodules = submodules ? submodules : data.submodules
  finder = finder ? finder : data.accessories.accessoryFinder
  type = type ? type : 'camera'
  pluralProducts = finder.pluralProducts ? finder.pluralProducts : 'Products'
  singularProduct = finder.singularProduct ? finder.singularProduct : 'Product'
  total = finder.total ? finder.total : 0

  //- Add the modal trigger button if they don't say otherwise
  if !noButton
    .container
      .grid
        +accessoryFinderButton( undefined, 'first pull-left' )

  .af-module
    #accessory-finder-modal.accessory-finder.modal.fade.hide(tabindex="-1", role="dialog", aria-labelledby="accessory-modal-title", aria-hidden="true")
      .container
        .modal-inner
          .modal-header.grid
            h4.t4-bold#accessory-modal-title= finder.title

            p.p3= finder.subtitle
            button.box-close(data-dismiss="modal", aria-hidden="true")
              i.fonticon-10-x-skinny

          .modal-subhead
            .grid.m-grid-at-767.filter-container
              .search-form.pull-left
                i.fonticon-10-search.input-icon
                label.visuallyhidden(for="accessory-finder-input")
                input(class="p2", id="accessory-finder-input", type="text", placeholder=finder.placeholder)
              +helpPopover( finder.help, undefined, true )

          .modal-body.fade
            .modal-body-inner
              .grid.compat-filters.filter-display-bar
                //- Product Count
                +productCount( pluralProducts, singularProduct, total )

                .pull-right
                  //- Sort options
                  +sorter( finder.sortSet, finder.sortText )

              .slimgrid.no-grid-at-567.products
                each module in submodules
                  d = locals.data(module.data)
                  if d.type == type && !d.promo
                    - d.view = "compatibility"
                    e = { "locals" : locals, "data" : d }
                    !{locals.partial( module.type, e )}



mixin productStrips( submodules, strips, type )
  submodules = submodules ? submodules : data.submodules
  type = type ? type : 'accessory'

  section
    .container
      each strip in strips
        .slimgrid5.m-grid-at-767.product-strip-wrap.js-product-strip
          .product-strip-header.clearfix
            h2.t6.product-strip-heading.pull-left= strip.title
            if strip.callout
              a.tl.see-all-link.pull-right(href="#")= strip.callout
          .product-strip.clearfix
            count = 0
            each module in submodules
              d = locals.data(module.data)
              if d.type == type && d.subtype == strip.subtype && count < 5
                - d.layout = layouts.layout3
                - d.view = "basic"
                e = { "locals" : locals, "data" : d }
                !{locals.partial( module.type, e )}
                - count += 1


mixin recommendedTile( recommended )
  div.span4.detailed.gallery-item.recommended-tile(data-recommended="true")
    h3.l3.recommended-title= recommended.title
    .wrap
      ul.media-list
        each product in recommended.products
          li.media(itemscope, itemtype="http://schema.org/Product")
            d = locals.data( product.data )
            - d.view = "recommended"
            e = { "locals" : locals, "data" : d }
            !{ locals.partial( product.type, e ) }





