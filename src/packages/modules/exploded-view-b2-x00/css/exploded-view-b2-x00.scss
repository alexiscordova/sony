@import "../../../common/css/_base/variables";
@import "../../../common/css/_base/mixins";

$bgMaxWidth: 1188px;
$maxPieces: 9;
$calloutPieceNumber: 2;
$pieceWidth: 170px;
$pieceHeight: 170px;
$piecesOffsetTop: 221px;
$piecesOffsetRight: 150px;

// The distance between each piece in the exploded state
$pieceExplosionStep: 8%;

// The distance between each piece in the tease state
$pieceTeaseStep: 1%;

.exploded-view {

  .container {
    max-width: $bgMaxWidth;
  }

  .submodule > .image-module {
    height: 600px;
    @include background-size(auto 600px);
    background-repeat: no-repeat;
    background-position: right top;
  }

  &.full-inner {
    position: relative;
  }

  .inner {
    height: 100%;
    position: absolute;
    top: 0;
    right: 0;
    left: 0;

    .grid,
    .grid > div,
    .table-center-wrap {
      height: 100%;
    }

  }

  .intro {

    h2, p {
      color: white;
    }

  }

  .csstransitions & .intro {
    opacity: 1;
    @include transition( opacity $transitionSuperslow $easeNormal );

    &.out {
      opacity: 0;
    }
  }

  .pieces {
    height: $pieceHeight;
    position: relative;
    top: $piecesOffsetTop;
    margin-right: $piecesOffsetRight;
  }

  .callout {
    z-index: $maxPieces;
    width: 270px;
    height: 320px;
    text-align: right;
    position: absolute;
    right: $calloutPieceNumber * $pieceExplosionStep;
    top: 70px;
    margin-right: $piecesOffsetRight + ( $pieceWidth / 2 );
    padding-right: 20px;
    border-right: solid 2px #f00;

  }

  .csstransitions & .callout {
    opacity: 0;
    @include transition( opacity $transitionSuperslow $easeNormal $transitionSuperslow );

    &.in {
      opacity: 1;
    }
  }

  .piece {
    width: $pieceWidth;
    height: $pieceHeight;
    position: absolute;
    top: 0;
    right: 0;
    background-position: 0 0;

    // The transition properties used when collapsing the exploded elements (both from tease and exploded)
    @include transition( right $transitionSuperslow $easeOutQuad );

    &.tease {
      // The transition properties used when teasing expansion of the exploded elements
      @include transition( right $transitionNormal $easeOutQuad );
    }

    &.exploded {
      // The transition properties used when expanding the exploded elements
      @include transition( right $transitionSuperslow $easeOutQuad );
    }

  }

  .explode {
    position: absolute;
    right: $piecesOffsetRight - 48px;
    top: ($pieceHeight / 2) - 22px;
    z-index: $maxPieces + 1;
    background: $buttonOrange;
    color: #fff;
    width: 100px;
    height: 30px;
    text-align: right;
    &:hover {
      text-align: left;
    }
    @include transition( right $transitionSuperslow $easeOutQuad );
    &.open {
      text-align: left;
      right: $maxPieces * $pieceExplosionStep;
    }
  }

  @for $i from 0 through $maxPieces {
    .piece-#{$i} {
      background-position-x: -$pieceWidth * $i;
      z-index: $maxPieces - $i;

      @if $i != 0 { 
        @if $i != $maxPieces {
          &.tease {
            right: ($maxPieces - $i - 1) * $pieceTeaseStep;
          }
          &.exploded {
            right: ($maxPieces - $i - 1) * $pieceExplosionStep;
          }
        }
      }
    }
  }

}