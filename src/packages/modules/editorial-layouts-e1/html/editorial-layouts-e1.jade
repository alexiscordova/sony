include ../../../common/html/jade-helpers.jade
+includeCSS('editorial-layouts-e1')
+includeJavascriptModule('editorial-layouts-e1')

mixin gridstyle(_extra, mgrid)
  extraclass = _extra ? _extra : false
  if mgrid
    .grid.m-grid-at-767(class = extraclass)(class = data.style)
      block
  else
    .grid.no-grid-at-767(class = extraclass)(class = data.style)
      block

mixin center
  .table-center-wrap
    .table-center
      block

mixin col(_layout, extras)
  layout = _layout ? _layout : data.layout
  if layout.text == "left"
    - span = "span" + layout.columns[0]
    div(class = span)(class = extras)
      block
  else
    - span = "span" + layout.columns[1]
    - offset = "offset" + layout.columns[0]
    div(class = span)(class = offset)(class = extras)
      block

mixin boxclass(_layout)
  layout = _layout ? _layout : data.layout
  .box(class = layout.alignment)
    block

mixin boxlayout(_layout)
  layout = _layout ? _layout : data.layout
  classes = data.style
  if layout.mobilealign
    classes = classes + " " + layout.mobilealign
  if layout.text == "left" || layout.text == "full"
    .container.inner(class = classes)
      .grid.no-grid-at-767
        - span = "span" + layout.columns[0]
        div(class = span)
          +center
            +boxclass
              block
  else if layout.text == "right" || layout.text == "center"
    .container.inner(class = classes)
      .grid.no-grid-at-767
        - span = "span" + layout.columns[1]
        - offset =  "offset" + layout.columns[0]
        div(class = span)(class = offset)
          +center
            +boxclass
              block

mixin toutcopy(copyobject, titleclass, subtitleclass, bodyclass, mobileclass)
  mobileclass = mobileclass ? mobileclass : ""
  span.toutcopy(class = mobileclass)
    +copyblock(copyobject, titleclass, subtitleclass, bodyclass)

mixin toutimage(imgdata, mobileclass)
  if imgdata.data !== undefined
    - imgdata.data.mobileclass = mobileclass
    !{locals.partial('packages/modules/image/html/image.jade' , imgdata)}

mixin copyblock(_copy, _title, _subtitle, _body, linkclass)
  copyobject = _copy ? _copy : data
  titleclass = _title ? _title : "t2"
  subtitleclass = _subtitle ? _subtitle : "t6"
  bodyclass = _body ? _body : "p2"
  .copy
    if copyobject.title
      h2(class = titleclass) !{copyobject.title}
    if copyobject.subtitle
      h3(class = subtitleclass) !{copyobject.subtitle}
    if copyobject.body
      p(class = bodyclass) !{copyobject.body}
  if copyobject.link
    .link
      linktextsize = copyobject.link.type == "txt" ? "lt3" : ""
      a(class = copyobject.link.type, href= copyobject.link.url)(class = linktextsize) !{copyobject.link.text}

mixin textonlylayout(_layout)
  layout = _layout ? _layout : data.layout
  if layout.text == "full"
    .box.span12(class = layout.alignment)
      block
  else
    extras = "box " + layout.alignment
    +col(layout, extras)
      block


editorialClasses = [ "editorial", data.mode ]
if data.variation && data.variation.background
  - editorialClasses.push( data.variation.background )

div(class = editorialClasses, id = data.id ? data.id : false)
  if data.mode == "textonly"
    .container
      +gridstyle
        +textonlylayout
          +copyblock

  else if data.mode == "full-inner"
    .container.submodule
      +partial(data.submodules[0].type, data.submodules[0].data)
    +boxlayout
      +copyblock(data, "t3-bold", "t7", "p3")
  else if data.mode == "full"
    .container
      +gridstyle
        +textonlylayout
          +copyblock
    .container.submodule
      +partial(data.submodules[0].type, data.submodules[0].data)

  else if data.mode == "mediaright"
    .container
      +gridstyle
        span = "span" + data.layout.columns[0]
        div(class = span)
          +center
            .box
              +copyblock(data, "t3-bold", "t7", "p3")
        span = "span" + data.layout.columns[1]
        .media-element(class = span)
          +center
            +partial(data.submodules[0].type, data.submodules[0].data)

  else if data.mode == "medialeft"
    .container
      +gridstyle
        span = "span" + data.layout.columns[0]
        .media-element(class = span)
          +center
            +partial(data.submodules[0].type, data.submodules[0].data)
        span = "span" + data.layout.columns[1]
        div(class = span)
          +center
            .box
              +copyblock(data, "t3-bold", "t7", "p3")

  else if data.mode == "tout" || data.mode =="full-tout"
    ups = "m" + data.columns.length + "up"
    containerClass = ups + "-"
    suffix = ""

    //- Only 2 column layouts have vertical/horizontal
    if data.columns.length == 2 && data.layout.tout
      if data.layout.tout.orientation == "vertical"
        suffix = "vertical"
      else
        suffix = "horizontal"
    else
      suffix = "container"

    containerClass = containerClass + suffix

    //- add a generic class too
    ups = ups + " tout-grid"

    .container(class = containerClass)
      if data.title
        +gridstyle("title-block")
          +textonlylayout
            +copyblock
      if data.submodules
        .submodule
          +partial(data.submodules[0].type, data.submodules[0].data)
      columnoffset = data.layout.tout.columnoffset || 0;
      offset = "offset" + columnoffset;
      +gridstyle(ups, data.mode == "tout")
        if data.columns.length == 1
          e = {"locals":locals, "data":data.columns[0].image}
          mspan = e.data == null ? "" : " m-span4"
          if data.layout.tout.text == "right"
            span = "span"+ data.layout.tout.columns[columnoffset] + " m-span2"
            div(class = span)(class = offset)
              +toutimage(e)
            span = "span"+ data.layout.tout.columns[columnoffset +1] + mspan
            div(class = span)(class = "text"+data.layout.tout.text)
              +toutcopy(data.columns[0], "t7", "", "p3")

          else
            span = "span"+ data.layout.tout.columns[columnoffset] + mspan
            div(class = span)(class = offset)(class = "text"+data.layout.tout.text)
              +toutcopy(data.columns[0], "t7", "", "p3")
            span = "span"+ data.layout.tout.columns[columnoffset +1] + " m-span2"
            div(class = span)
              +toutimage(e)


        else if data.columns.length == 2
          for col, i in data.columns
            e = {"locals":locals, "data":col.image}
            span = "span"+ data.layout.tout.columns[i + columnoffset]
            offset = i == 0 ? "offset"+columnoffset : ""
            mspan = e.data == null ? "" : "m-span4"
            if data.layout.tout.orientation == "vertical"
              .vertical(class = span)(class = offset)(class = data.layout.tout.alignment)
                +toutimage(e, "m-span2")
                +toutcopy(col,"t7", "", "p3", mspan)
            else
              .horizontal(class = span)(class = offset)(class = data.layout.tout.alignment)(class = "clearfix")
                +toutimage(e, "m-span2")
                div
                  +center
                    +toutcopy(col, "t7", "", "p3 hidden-phone", mspan)

        else if data.columns.length == 3
          for col, i in data.columns
            e = {"locals":locals, "data":col.image}
            span = "span"+ data.layout.tout.columns[i]
            mspan = e.data == null ? "" : "m-span4"
            div(class = span)(class = data.layout.tout.alignment)
              +toutimage(e, "m-span2")
              +toutcopy(col,"t7", "", "p3", mspan)




