include ../../../common/html/jade-helpers.jade
+includeJavascriptModule('product-details-d5')

mixin inchesString(inches)
  - inches = "(" + inches + "\")"
  p.inches= inches

mixin cmString(cm)
  p.centimeters
    | #{cm}cm

mixin measurementValues(value, dir, isThin)
  - clss = [dir + "-measurement"]
  
  if ((!isThin) && (dir == "vertical"))
    - clss.push('not-thin')
  
  div(class = clss) 
    
    div.measurements-container
      +cmString(value.cm)

      if (value.inches)
        +inchesString(value.inches)
  
mixin measurementsList(measurements)
  for m in measurements
    - isThin = m.thinImage
    .measurement.p4
      .wrapper
        .img-wrapper
          +iQImage(m.image, "pd-image")

        if (m.height)
          +measurementValues(m.height, "vertical", isThin)  

        //- put width in image wrapper for simple centering solution
        if (m.width)
          +measurementValues(m.width, "horizontal", isThin)

mixin featureList( list, extraClasses)
  - listClasses = 'feature-list'
  - extraClasses = extraClasses || false 
  - if ( extraClasses ) listClasses += ' ' + extraClasses

  ul(class=listClasses)
    each li in list
      - copyClasses = ["copy", "ghost-center"]

      //- at least copy required
      if (li.copy)        
        li
          .ghost-center-wrap
            if (li.icon)
              - iconClasses = ["icon", "ghost-center"]
              - copyClasses.push("with-icon")
              p(class= iconClasses)
                i(class= li.icon)
            
            p(class= copyClasses)
              | #{li.copy}
              
              if (li.link)
                a(href=li.link)= li.linkLabel
            
mixin definitionList( list, isHorizontal )
  - isHorizontal = isHorizontal || false
  - clss = isHorizontal ? 'dl-horizontal' : null
  dl(class=clss)
    each li in list
      dt.l3: strong= li.title
      if li.copy
        dd.p3= li.copy

mixin extras(extras)
  for extra in extras
    if(extra.copy)
      .extra
        p.l3
          strong= extra.title
        p.p3 !{extra.copy}        


//- TOP DATA
- top = data.top

//- CENTER DATA
- center = data.center
- features = center.features
- isFeatures = features.length > 0

- specs = center.specs
- isSpecs = specs.length > 0

- measurements = center.measurements
- isMeasurements = measurements.length > 0

- extras = center.extras
- isExtras = extras.length > 0

//- Defaults
- columnCount = 0
- centerSpanClasses = []
- lastCoumnClasses = []

- sectionCount = 0 //- features/specs/measurements
- console.log("Init" + sectionCount)

//- Check how many columns there are
if(isFeatures) 
  - sectionCount = sectionCount + 100 
  - console.log("Feaures:" + sectionCount)
  - columnCount++   

if(isSpecs)
  - sectionCount = sectionCount + 10
  - console.log("Specs" + sectionCount)
  - columnCount++

if(isMeasurements)
  - sectionCount = sectionCount + 1
  - console.log("Measurements" + sectionCount)
  - columnCount++

//- KEY
//- 111 = Features / Specs / Measurements
//- 101 = Features / Measurements
//- 011 = Specs / Measurements
//- 110 = Features / Specs
//- 100 = Features
//- 010 = Specs
- console.log(sectionCount)




//- Set the right grid span based on columnCount
case columnCount
 when 2
   - centerSpanClasses.push("span6")
 when 3
   - centerSpanClasses.push("span4")

//- BOTTOM DATA VARS
- bottom = data.bottom
- bottomBtn = bottom.bottomBtn
- textTout = bottom.textTout
- isBottomBtn = bottomBtn.buttonLink != ""
- isTextTout = textTout.copy != ""
- bottomSpanClass = []

//- Add necessary class
if((isTextTout) && (isBottomBtn))
  - bottomSpanClass.push("span6")

//- START PRODUCT DETAILS

//- General vars
- productDetailsClasses = ["pd-module","container"]
section(class= productDetailsClasses)
  .top.grid
    .title.l1= top.title

    if(top.desc.length > 0)
      .desc.p3= top.desc

  .center.grid
    case sectionCount
      when 111
        .features(class= centerSpanClasses)
          +featureList(features)

        .specs(class= centerSpanClasses)
          +definitionList(specs, false)

        .last-column.has-measurements(class= centerSpanClasses)
          .measurements
            +measurementsList(measurements)

          if(isExtras)
            .extras.with-measurements
              +extras(extras)

      when 101
        .features(class= centerSpanClasses)
          +featureList(features)

        .last-column.has-measurements(class= centerSpanClasses)       
          .measurements
            +measurementsList(measurements)

          if(isExtras)
            .extras.with-measurements
              +extras(extras) 

      when 11
        .specs(class= centerSpanClasses)
          +definitionList(specs, false)

        .last-column.has-measurements(class= centerSpanClasses)       
          .measurements
            +measurementsList(measurements)

          if(isExtras)
            .extras.with-measurements
              +extras(extras) 
      
      when 110
        .features(class= centerSpanClasses)
          +featureList(features)

        .last-column(class= centerSpanClasses)
          .specs(class= centerSpanClasses)
            +definitionList(specs, false)

          if(isExtras)
            .extras
              +extras(extras)
      
      when 100
        .features(class= centerSpanClasses)
          +featureList(features)

        .last-column(class= centerSpanClasses)
          if(isExtras)
            .extras
              +extras(extras) 

      when 10
        .specs(class= centerSpanClasses)
          +definitionList(specs, false)

        .last-column(class= centerSpanClasses)
          if(isExtras)
            .extras
              +extras(extras)
  
  .bottom.grid
    - btmCopyClasses = ["copy","p3"]
    if(isTextTout)
      .text-tout.span6
        //- FPO IMAGE FOR NOW, THIS SHOULD BE CHANGED FROM A PATH TO A ICON CLASS AS ALL OTHERS ARE
        if (textTout.icon)
          - btmCopyClasses.push("with-icon")
          .icon
            img(src= textTout.icon)      
        div(class= btmCopyClasses)
          | #{textTout.copy}
          if(textTout.link)
            a(href= textTout.link)= textTout.linkLabel
    
    if(isBottomBtn)
      .bottom-btn(class= bottomSpanClass)
        a.btn.buttonLabel(href= bottomBtn.buttonLink)= bottomBtn.buttonLabel


//- END PRODUCT DETAILS