include ../../../common/html/jade-helpers.jade
include product-details-d5-helpers.jade
+includeCSS('product-details-d5')
+includeJavascriptModule('product-details-d5')

- productDetailsClasses = ["pd-module","container"]
+mainElement(productDetailsClasses)

  - top = data.top
  - hasDesc = top.desc.length > 0

  .top.grid.m-grid-at-979.no-grid-at-567
    .title.l1 !{top.title}
    if(hasDesc)
      .desc.p3 !{top.desc}

  - center = data.center
  - features = center.features
  - specs = center.specs
  - measurements = center.measurements
  - extras = center.extras
  - centerSpanClasses = []

  //- LOGIC
  - isFeatures = features.length > 0
  - isSpecs = specs.length > 0
  - isMeasurements = measurements.length > 0
  - isExtras = extras.length > 0
  - centerLayoutValue = 0  //- features [100] /specs [10] / measurements [1]
  - centerClasses = ["center","grid","m-grid-at-979","no-grid-at-567"]

  //- Calculate layout value based on sections present
  //- Features?
  - centerLayoutValue = isFeatures ? centerLayoutValue + 100 : centerLayoutValue

  //- Specs?
  - centerLayoutValue = isSpecs ? centerLayoutValue + 10 : centerLayoutValue

  //- Measurements?
  - centerLayoutValue = isMeasurements ? centerLayoutValue + 1 : centerLayoutValue

  //- LAYOUT VALUES
    //- 111 = Features | Specs | Measurements (3col)
    //- 101 = Features | Measurements (2 col)
    //- 011 = Specs | Measurements (2 col)
    //- 110 = Features | Specs (2 col)
    //- 100 = Features (2 col - because of split)
    //- 010 = Specs (2 col - because of split)

  //- Set the right grid span based on centerLayoutValue (111 is the only real 3col)
  - centerSpanClasses = centerLayoutValue == 111 ? ["span4"] : ["span6"]

  - context = {}

  //- Split into 2-cols if just features
  if (centerLayoutValue == 110)

    //- extras should be considered in colum split
    - context.totalItems = features.length + extras.length

    //- slice array for first column
    - context.col1Start = 0
    - context.col1End = Math.round(context.totalItems/2)
    - context.col1Items = features.slice(context.col1Start, context.col1End)

    //- slice array for second column
    - context.col2Start = context.col1End
    - context.col2End = context.totalItems
    - context.col2Items = features.slice(context.col2Start)

  //- Split into 2-cols if just features
  if (centerLayoutValue == 100)

    //- extras should be considered in colum split
    - context.totalItems = features.length + extras.length

    //- slice array for first column
    - context.col1Start = 0
    - context.col1End = Math.round(context.totalItems/2)
    - context.col1Items = features.slice(context.col1Start, context.col1End)

    //- slice array for second column
    - context.col2Start = context.col1End
    - context.col2End = context.totalItems
    - context.col2Items = features.slice(context.col2Start)

  //- Split into 2-cols if just specs (same logic as features split)
  if (centerLayoutValue == 10)
    - context.totalItems = specs.length + extras.length

    - context.col1Start = 0
    - context.col1End = Math.round(context.totalItems/2)
    - context.col1Items = specs.slice(context.col1Start, context.col1End)

    - context.col2Start = context.col1End
    - context.col2End = context.totalItems
    - context.col2Items = specs.slice(context.col2Start)

  //- DISPLAY
  div(class= centerClasses)
    case centerLayoutValue
      when 111
        .features.m-span3(class= centerSpanClasses)
          +featureList(features)

        .specs.m-span3(class= centerSpanClasses)
          +specsList(specs, false)

        .last-column.has-measurements.m-span6(class= centerSpanClasses)
          .measurements
            +measurementsList(measurements)

          if(isExtras)
            .extras.with-measurements
              +extras(extras)

      when 101
        .features.m-span3(class= centerSpanClasses)
          +featureList(features)

        .last-column.has-measurements.m-span3(class= centerSpanClasses)
          .measurements
            +measurementsList(measurements)

          if(isExtras)
            .extras.with-measurements
              +extras(extras)

      when 11
        .specs.m-span3(class= centerSpanClasses)
          +specsList(specs, false)

        .last-column.has-measurements.m-span3(class= centerSpanClasses)
          .measurements
            +measurementsList(measurements)

          if(isExtras)
            .extras.with-measurements
              +extras(extras)

      when 110
        .features.m-span3(class= centerSpanClasses)
          +featureList(features)

        .last-column.m-span3(class= centerSpanClasses)
          .specs
            +specsList(specs, false)

          if(isExtras)
            .extras
              +extras(extras)

      when 100
        .features.m-span3(class= centerSpanClasses)
          +featureList(context.col1Items)

        .last-column.m-span3(class= centerSpanClasses)
          .features
            +featureList(context.col2Items)

          if(isExtras)
            .extras
              +extras(extras)

      when 10
        .specs.m-span3(class= centerSpanClasses)
          +specsList(context.col1Items, false)

        .last-column.m-span3(class= centerSpanClasses)
          .specs
            +specsList(context.col2Items, false)

          if(isExtras)
            .extras
              +extras(extras)

  - bottom = data.bottom
  - bottomBtn = bottom.bottomBtn
  - textTout = bottom.textTout
  - bottomLayoutValue = 0
  - bottomElClasses = ["span6"]
  - bottomCopyClasses = ["copy","p3","table-center"]
  - bottomIconClasses = ["icon","table-center"]
  - btmToutClasses = ["text-tout","span6","table-center-wrap"]
  - btmButtonClasses = ["bottom-btn","span6"]

  //- LOGIC
  - isBottomBtn = bottomBtn.buttonLink != ""
  - isTextTout = textTout.copy != ""

  //- is there text tout copy?
  if (isTextTout)
    - bottomLayoutValue = bottomLayoutValue + 10

  //- is there a button href?
  if (isBottomBtn)
    - bottomLayoutValue = bottomLayoutValue + 1

  //- HANDLE LAYOUT VALUES
  case bottomLayoutValue
    when 10
      //- 10 = Text Tout Only (1col)
      - btmToutClasses.push("m-span6")
    when 1
      //- 1 = Button Only (1col)
      - btmButtonClasses.push("m-span6")
    when 11
      //- 11 = Text Tout | Button (2 col)
      - btmToutClasses.push("m-span4")
      - btmButtonClasses.push("m-span2")

  //- DISPLAY
  .bottom.grid.m-grid-at-979.no-grid-at-567
    case bottomLayoutValue
      when 10
        +bottomTout(textTout)
      when 1
        +bottomButton(bottomBtn)
      when 11
        +bottomTout(textTout)
        +bottomButton(bottomBtn)
